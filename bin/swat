#!/bin/bash

project=$1
url=$2
shift;
shift;

prove_flags="$@"
prove_flags=${prove_flags:='-v'}

debug=${debug:=0}
curl_params=${curl_params:=''}
ignore_http_err=${ignore_http_err:=0}
try_num=${try_num:=2}
curl_connect_timeout=${curl_connect_timeout:=20}
curl_max_time=${curl_max_time:=20}
head_bytes_show=${head_bytes_show:=400}
swat_ini_file=${swat_ini_file:='swat.ini'}


rm -rf ~/.swat/.cache/$project/$url
mkdir -p ~/.swat/.cache/$project/$url

swat_environment_settings_file=~/.swat/.cache/$project/$url/$swat_ini_file
echo $swat_environment_settings_file

# save swat environmetal seetings to file to re-apply them
echo "debug=$debug" > $swat_environment_settings_file
echo "try_num=$try_num" >> $swat_environment_settings_file
echo "ignore_http_err=$ignore_http_err" >> $swat_environment_settings_file
echo "curl_connect_timeout=$curl_connect_timeout" >> $swat_environment_settings_file
echo "curl_max_time=$curl_max_time" >> $swat_environment_settings_file
echo "curl_params='$curl_params'" >> $swat_environment_settings_file


if [ \(  -n "${project}"  \) -a \( -d "${project}" \) -a \( -n "${url}" \) ] ; then


    safe_project=`perl -MFile::Basename -e '$i=$ARGV[0]; s{\/$}[], chomp for $i; print $i' $project`


    reports_dir=~/.swat/reports/$url/
    rm -rf $reports_dir
    mkdir -p $reports_dir

    for f in `find $safe_project/ -type f -name get.txt -o -name post.txt`; do

        test_dir=`perl -e '$sp=$ARGV[0]; s{\w+\.txt$}[] for $sp; chomp $sp; print $sp' $f`;

        unset debug
        unset try_num
        unset ignore_http_err
        unset curl_connect_timeout
        unset curl_max_time
        unset curl_params

        test -f ~/$swat_ini_file && source ~/$swat_ini_file
        test -f $swat_environment_settings_file && source $swat_environment_settings_file
        test -f $safe_project/$swat_ini_file && source $safe_project/$swat_ini_file
        test -f $test_dir/$swat_ini_file && source $test_dir/$swat_ini_file

        path=`perl -e '$sp=$ARGV[0]; $p=$ARGV[1]; s{^$sp}[], s{\w+\.txt}[], s{/$}[] for $p; chomp $p; $p = "/"  unless $p; print $p' $safe_project $f`;
        mkdir -p "${reports_dir}/${path}";

        http_meth=`perl -e '$p=$ARGV[0]; $p=~/(\w+)\.txt$/ and print uc($1)' $f`;

        if [ "$ignore_http_err" -eq '1' ]; then
            curl_cmd="curl -X $http_meth --noproxy $url ${curl_params} -k  --connect-timeout $curl_connect_timeout -m $curl_max_time -D - -L  --stderr - $url$path"
        else
            curl_cmd="curl -X $http_meth --noproxy $url ${curl_params} -k -f --connect-timeout $curl_connect_timeout -m $curl_max_time -D - -L  --stderr - $url$path"
        fi

        if [ "$http_meth" = 'GET' ]; then
            tfile="${reports_dir}/${path}/00.t"
        else
            tfile="${reports_dir}/${path}/00.post.t"
        fi

        echo 'BEGIN { push @INC, q{'`pwd`'}; }'  > $tfile
        echo >> $tfile

        echo "use Test::More q{no_plan};"  >> $tfile
        echo $\content_file = q{"${reports_dir}${path}/content.${http_meth}.txt};"  >> $tfile
        echo $\path = q{"${path}};"  >> $tfile
        echo $\http_meth = q{"${http_meth}};"  >> $tfile
        echo $\url = q{"${url}};"  >> $tfile
        echo $\debug = $debug';'  >> $tfile
        echo $\ignore_http_err = $ignore_http_err';'  >> $tfile
        echo $\head_bytes_show = $head_bytes_show';'  >> $tfile
        echo $\try_num = $try_num';'  >> $tfile
        echo $\curl_cmd = q{"${curl_cmd}};"  >> $tfile
        echo >> $tfile

        echo "require swat;"  >> $tfile
        echo >> $tfile

        echo "SKIP: {" >> $tfile
        echo -e "\tgenerate_asserts(q{$f})" >> $tfile;
        echo >> $tfile
        echo "}" >> $tfile

    done;

    prove -m -r $@ "$prove_flags" $reports_dir;


elif [ -z "${project}" ] ; then
    echo "error - project directory parameter is not set"
    echo "usage: swat project URL"
    exit 1
elif ! [ -d "${project}" ] ; then
    echo "error - project directory does not exist"
    echo "usage: swat project URL"
    exit 1
elif [ -z  "${url}"  ] ; then
    echo "error - url parameter is not set"
    echo "usage: swat project URL"
    exit 1
else
    echo "usage: swat project URL"
    exit 1
fi


